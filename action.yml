name: 'Initialize job for hosted and self-hosted runner usage'
description: Pre-fetch commonly used GitHub actions for self-hosted runners

inputs:
  self_hosted:
    description: 'Whether the runner is self-hosted or not'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Debug - Print input self_hosted
      shell: bash
      run: echo "self_hosted = '${{ inputs.self_hosted }}'"

    - name: Pre-fetch actions (forced output) ‚öôÔ∏è
      if: inputs.self_hosted == 'true'
      shell: bash
      run: |
        echo "üì¶ Pre-fetching actions..."

        GH_ACTIONS=(
          "actions/checkout@v4"
          "actions/upload-artifact@v4"
          "actions/download-artifact@v4"
          "actions/setup-node@v4"
          "actions/setup-java@v4"
          "actions/cache@v3"
        )

        BASE_PATH="$RUNNER_WORKSPACE/_actions"

        clone_action() {
          local REPO=$1
          local VERSION=${REPO##*@}
          local PATH_PART=${REPO%@*}
          local OWNER=$(dirname "$PATH_PART")
          local NAME=$(basename "$PATH_PART")
          local TARGET="$BASE_PATH/$OWNER/$NAME/$VERSION"

          echo "üîÅ Checking $REPO ‚Üí $TARGET"

          if [ ! -f "$TARGET/action.yml" ]; then
            echo "üì• Cloning $REPO..."
            mkdir -p "$TARGET"
            git clone --depth=1 --branch "$VERSION" "https://github.com/$OWNER/$NAME.git" "$TARGET"
            echo "‚úÖ $REPO fetched"
          else
            echo "‚úÖ $REPO already available"
          fi
        }

        for entry in "${GH_ACTIONS[@]}"; do clone_action "$entry"; done

    - name: Checkout repo üì¶
      uses: actions/checkout@v4